This is a benchmark to see how much slower ResourceHashtable will
be if we change the SIZE from a build-time constant to a runtime-configurable
parameter.

Please "diff resourceHash.hpp resourceHashNew.hpp" to see the differences.


For a simple loop that calls ResourceHashtable::get():

build-time constant            = 0:02.72
runtime-configurable param     = 0:05.26 (about 1/2 slower)


This was executed on "Intel(R) Xeon(R) CPU E5-2665 0 @ 2.40GHz"

$ make run
/home/iklam/devkit/latest/bin/g++ -O3 -save-temps -o test test.cpp
time ./test 0 100000000
which = 0 v = 333150064816
0.35user 0.00system 0:00.35elapsed 99%CPU (0avgtext+0avgdata 2824maxresident)k
0inputs+0outputs (0major+135minor)pagefaults 0swaps
time ./test 1 100000000
which = 1 v = 333150064816
1.18user 0.00system 0:01.18elapsed 99%CPU (0avgtext+0avgdata 2720maxresident)k
0inputs+0outputs (0major+135minor)pagefaults 0swaps
time ./test 2 100000000
which = 2 v = 1000000000
2.72user 0.00system 0:02.72elapsed 99%CPU (0avgtext+0avgdata 2744maxresident)k
0inputs+0outputs (0major+155minor)pagefaults 0swaps
time ./test 3 100000000
which = 3 v = 1000000000
5.26user 0.00system 0:05.26elapsed 99%CPU (0avgtext+0avgdata 2728maxresident)k
0inputs+0outputs (0major+163minor)pagefaults 0swaps

